{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/index.js"],"sourcesContent":["// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector('#card-template');\r\n\r\n// @todo: Функция создания карточки\r\nexport function createCard(myId, cardData, { likeCard, openModalDelete, openModalImage } = {}) {\r\n      const cardElement = cardTemplate.content.cloneNode(true);\r\n      const cardItem = cardElement.querySelector('.card');\r\n      const cardId = cardData._id;\r\n      const cardTitle = cardElement.querySelector('.card__title');\r\n      const cardImage = cardElement.querySelector('.card__image');\r\n      const deleteButton = cardElement.querySelector('.card__delete-button');\r\n      const likeButton = cardElement.querySelector('.card__like-button');\r\n      const arrLikes = cardData.likes;\r\n      const likes = cardElement.querySelector('.card__like-likes');\r\n      cardTitle.textContent = cardData.name;\r\n      cardImage.src = cardData.link;\r\n      cardImage.alt = cardData.name;\r\n      if (cardData.owner._id == myId) {\r\n        deleteButton.classList.remove('card__delete-button_inactive');\r\n      }     \r\n      arrLikes.some((like) => {\r\n        if(like._id == myId) {\r\n          likeButton.classList.add('card__like-button_is-active');\r\n        }\r\n      });\r\n      likes.textContent = arrLikes.length;\r\n      likeButton.addEventListener('click', () => likeCard(likeButton, likes, cardId));\r\n      deleteButton.addEventListener('click', () => openModalDelete(cardItem, cardId));\r\n      cardImage.addEventListener('click', () => openModalImage(cardData.name, cardData.link));\r\n      return cardElement;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\nexport function removeCard(cardElement) {\r\n  cardElement.remove();\r\n}\r\n\r\n// @todo: Функция для лайка\r\nexport function likeCard (event) {\r\n    const eventTarget = event.target;\r\n    eventTarget.classList.toggle('card__like-button_is-active'); \r\n}","//@todo: Функция открытия модального окна\r\nexport function openModal(modal) {\r\n    modal.classList.add('popup_is-opened');\r\n    document.addEventListener('keydown', keyHandlerEscape);\r\n}\r\n\r\n//@todo: Функция закрытия модального окна\r\nexport function closeModal(modal) {\r\n    modal.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', keyHandlerEscape); \r\n}\r\n\r\nfunction keyHandlerEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openedModal = document.querySelector('.popup_is-opened'); \r\n    closeModal(openedModal);\r\n  }\r\n}","const showInputError = (formElement, inputElement, validationConfig, errorMessage) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-input-error`);\r\n  inputElement.classList.add(`${validationConfig.inputErrorClass}`);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(`${validationConfig.errorClass}`);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-input-error`);\r\n  inputElement.classList.remove(`${validationConfig.inputErrorClass}`);\r\n  errorElement.classList.remove(`${validationConfig.errorClass}`);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n        // данные атрибута доступны у элемента инпута через ключевое слово dataset.\r\n        // обратите внимание, что в js имя атрибута пишется в camelCase (да-да, в\r\n        // HTML мы писали в kebab-case, это не опечатка)\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, validationConfig, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n   const inputList = Array.from(formElement.querySelectorAll(`${validationConfig.inputSelector}`));\r\n   const buttonElement = formElement.querySelector(`${validationConfig.submitButtonSelector}`);\r\n   toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n   inputList.forEach((inputElement) => {\r\n     inputElement.addEventListener('input', function () {\r\n       checkInputValidity(formElement, inputElement, validationConfig);\r\n       toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\n// @todo: Валидация полей форм\r\nexport function enableValidation(validationConfig) {\r\n  // Найдём все формы с указанным классом в DOM,\r\n  // сделаем из них массив методом Array.from\r\n  const formList=Array.from(document.querySelectorAll(`${validationConfig.formSelector}`));\r\n   formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', (evt) => {\r\n    evt.preventDefault();\r\n    });\r\n    // Для каждой формы вызовем функцию setEventListeners,\r\n    // передав ей элемент формы\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => { \r\n  return inputList.some((inputElement) => {\r\n      if (!inputElement.validity.valid || inputElement.validity.patternMismatch) {\r\n        return true;\r\n      }\r\n});\r\n};\r\n\r\nfunction toggleButtonState (inputList, buttonElement, inactiveButtonClass) {\r\n  if (hasInvalidInput(inputList)) {\r\n  buttonElement.classList.add(`${inactiveButtonClass}`);\r\n} else {\r\n  buttonElement.classList.remove(`${inactiveButtonClass}`);\r\n}\r\n};\r\n\r\n\r\n// @todo: Очистка валидации полей форм\r\nexport function clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(`${validationConfig.inputSelector}`));\r\n  const buttonElement = formElement.querySelector(`${validationConfig.submitButtonSelector}`);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig); \r\n    checkInputValidity(formElement, inputElement, validationConfig);\r\n    toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n  });\r\n};","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-38',\r\n  headers: {\r\n    authorization: '6f70953c-9f8b-4632-8131-9b1d1462f41f',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nfunction checkResponse(getRes) {\r\n  if (getRes.ok) {\r\n    return getRes.json();\r\n  }\r\n  // если ошибка, отклоняем промис\r\n  return Promise.reject(`Ошибка: ${getRes.status}`);\r\n};\r\n\r\n//Загрузка информации о пользователе с сервера\r\nexport const getNameProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        const resultUser = res.json();\r\n        return resultUser;\r\n      }\r\n       // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(res => {return res});\r\n};\r\n\r\n//Загрузка карточек с сервера\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        const resultCards = res.json();\r\n        return resultCards;\r\n      }\r\n\r\n       // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(res => {return res});\r\n};\r\n\r\n//Редактирование профиля\r\nexport const patchNameProfile = (name, job) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: job\r\n    })\r\n  });\r\n};\r\n\r\n//Добавление новой карточки\r\nexport const postNewCard = (cardName, cardLink) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: cardName,\r\n      link: cardLink\r\n    })\r\n  })\r\n  .then((res) => checkResponse(res))\r\n  .catch(err => console.log(err))\r\n};\r\n\r\n//Удаление карточки\r\nexport const deleteCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => checkResponse(res))\r\n  .catch(err => console.log(err))\r\n};\r\n\r\n//Добавление лайка карточки\r\nexport const addLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => checkResponse(res))\r\n  .catch(err => console.log(err))\r\n};\r\n\r\n//Добавление лайка карточки\r\nexport const deleteLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => checkResponse(res))\r\n  .catch(err => console.log(err))\r\n};\r\n\r\n//Редактирование аватара\r\nexport const editAvatar = (avatarUrl) => {\r\n   return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarUrl\r\n    })\r\n  })\r\n  .then((res) => checkResponse(res))\r\n  .catch(err => console.log(err))\r\n};","//импртируем стили\r\nimport './pages/index.css';\r\n//импртируем js\r\nimport { createCard, removeCard } from './components/card.js';\r\nimport { openModal, closeModal } from './components/modal.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport { getNameProfile, getInitialCards, patchNameProfile, postNewCard, deleteCard, addLikeCard, deleteLikeCard, editAvatar } from './components/api.js'\r\n\r\nconst cardsList = document.querySelector('.places__list');\r\n\r\n//кнопки\r\nconst buttonEditProfile = document.querySelector('.profile__edit-button');\r\nconst buttonAddCard = document.querySelector('.profile__add-button');\r\n\r\n//модальные окна\r\nconst modals = document.querySelectorAll('.popup');\r\nconst modalEditProfile = document.querySelector('.popup_type_edit');\r\nconst modalAddCard = document.querySelector('.popup_type_new-card');\r\nconst modalDelete = document.querySelector('.popup_type_delete');\r\nconst modalAvatar = document.querySelector('.popup_type_edit-avatar');\r\n\r\n//форма редактирвоания профиля\r\nconst formEditProfile = document.querySelector('form[name=\"edit-profile\"]');\r\n// Находим поля формы в DOM\r\nconst nameInputProfile = formEditProfile.querySelector('.popup__input_type_name');\r\nconst jobInputProfile = formEditProfile.querySelector('.popup__input_type_description');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileEditButton = document.querySelector('.profile__image-edit-button');\r\n\r\n//форма добавления карточки\r\nconst formNewCard = document.querySelector('form[name=\"new-place\"]');\r\n// Находим поля формы в DOM\r\nconst nameInputCard = formNewCard.querySelector('.popup__input_type_card-name');\r\nconst urlInputCard = formNewCard.querySelector('.popup__input_type_url');\r\n\r\n//форма удаления\r\nconst formDelete = document.querySelector('form[name=\"delete\"]');\r\n\r\n//форма для смены аватара\r\nconst formAvatar = document.querySelector('form[name=\"edit-avatar\"]');\r\nconst avatarInputProfile = formAvatar.querySelector('.popup__input_type_url');\r\n\r\n//настройка валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'button_inactive',\r\n  inputErrorClass: 'form__input_type_error',\r\n  errorClass: 'form__input-error_active'\r\n};\r\n\r\n// Обработчик «отправки» формы редактирвоания профиля\r\nfunction handleFormProfileSubmit(evt) {\r\n    evt.preventDefault(); // Отменяет стандартную отправку формы.\r\n    const button = formEditProfile.querySelector('.popup__button');\r\n    const name = nameInputProfile.value;\r\n    const job = jobInputProfile.value;\r\n    profileTitle.textContent = name;\r\n    profileDescription.textContent = job;\r\n    setSavingState(button);\r\n    patchNameProfile(name, job)\r\n    .then(result => {\r\n      closeModal(modalEditProfile);\r\n    })\r\n    .catch(err => console.log(err))  \r\n    .finally(() => {\r\n     setInitialSaveState(button);\r\n   });  \r\n};\r\n\r\n// Обработчик «отправки» формы добавления картчоки\r\nfunction handleFormCardSubmit(myId) {\r\n  const button = formNewCard.querySelector('.popup__button');\r\n  setSavingState(button);\r\n  postNewCard(nameInputCard.value, urlInputCard.value)\r\n   .then(result => {\r\n    const cardElement = createCard(\r\n    myId,\r\n    result,\r\n    {\r\n      likeCard,\r\n      openModalDelete,\r\n      openModalImage\r\n    }\r\n  ); \r\n  cardsList.prepend(cardElement); \r\n  closeModal(modalAddCard);\r\n  })\r\n  .catch(err => console.log(err))\r\n  .finally(() => {\r\n     setInitialSaveState(button);\r\n   });  \r\n};\r\n\r\n// @todo: Открываем модальное окно для редактирования профиля\r\nbuttonEditProfile.addEventListener('click', function () { \r\n  nameInputProfile.value = profileTitle.textContent;\r\n  jobInputProfile.value = profileDescription.textContent;\r\n  openModal(modalEditProfile);\r\n  clearValidation(formEditProfile, validationConfig); \r\n  enableValidation(validationConfig); \r\n});\r\n\r\n// @todo: Открываем модальное окно для добавления карточки\r\nbuttonAddCard.addEventListener('click', function () {\r\n  nameInputCard.value='';\r\n  urlInputCard.value='';\r\n  openModal(modalAddCard);\r\n  clearValidation(formNewCard, validationConfig); \r\n  enableValidation(validationConfig);\r\n});\r\n\r\nfunction setSavingState(button) {\r\n    button.textContent = 'Сохранение...';\r\n}\r\n\r\nfunction setInitialSaveState(button) {\r\n    button.textContent = 'Сохранить';\r\n}\r\n\r\nfunction refreshLikes(likeCountElement, responce) {\r\n    if (responce && responce.likes) {\r\n        likeCountElement.textContent = responce.likes.length;\r\n    }\r\n}\r\n\r\nfunction likeCard(likeButton, likes, cardId) {\r\n   if (likeButton.classList.contains('card__like-button_is-active')) {\r\n        deleteLikeCard(cardId)\r\n        .then(result => {\r\n          refreshLikes(likes, result);\r\n          likeButton.classList.toggle('card__like-button_is-active');\r\n        })\r\n        .catch(err => console.log(err));\r\n    } else {\r\n        addLikeCard(cardId)\r\n        .then(result => {\r\n          refreshLikes(likes, result);\r\n          likeButton.classList.toggle('card__like-button_is-active');\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n}\r\n\r\n// @todo: Открываем модальное окно с картинкой\r\nfunction openModalImage (cardTitle , cardImg) {\r\n    const modalTypeImage = document.querySelector('.popup_type_image');\r\n    const dataImage = modalTypeImage.querySelector('.popup__image');\r\n    const titleImage = modalTypeImage.querySelector('.popup__caption');\r\n    dataImage.alt = cardTitle;\r\n    dataImage.src= cardImg;\r\n    titleImage.textContent = cardTitle;\r\n    openModal(modalTypeImage);\r\n};\r\n\r\n// @todo: Открываем модальное окно с подтверждением удаления\r\nfunction openModalDelete(cardItem, cardId) {\r\n    formDelete.addEventListener('submit',  function (evt) {\r\n      evt.preventDefault();\r\n      handleDeleteCardSubmit(cardItem, cardId);\r\n    });\r\n    openModal(modalDelete);\r\n};\r\n\r\n//нажимаем на редактирвоание аватара\r\nprofileEditButton.addEventListener('click', () => {\r\n    avatarInputProfile.value='';\r\n    clearValidation(formAvatar, validationConfig);\r\n    enableValidation(validationConfig); \r\n    openModalAvatar();\r\n})\r\n\r\n\r\n// @todo: Открываем модальное окно для смены автара\r\nfunction openModalAvatar() {\r\n    const avatarUrl = avatarInputProfile.value;\r\n    formAvatar.addEventListener('submit',  function (evt) {\r\n      evt.preventDefault();\r\n      handleAvatarSubmit(avatarUrl);\r\n    });\r\n    openModal(modalAvatar);\r\n};\r\n\r\n\r\n// @todo: Подтверждаем удаление\r\nfunction handleDeleteCardSubmit(cardItem, cardId) {\r\n  const button = formDelete.querySelector('.popup__button');\r\n  setSavingState(button);\r\n  deleteCard(cardId)\r\n  .then(result => {\r\n     removeCard(cardItem);      \r\n      closeModal(modalDelete);\r\n    })\r\n   .catch(err => console.log(err))\r\n   .finally(() => {\r\n     setInitialSaveState(button);\r\n   });  \r\n};\r\n\r\n// @todo: Подтверждаем cмену аватара\r\nfunction handleAvatarSubmit(avatarUrl) {\r\n  profileImage.style.backgroundImage = `url(${avatarUrl})`;\r\n  const button = formAvatar.querySelector('.popup__button');\r\n  setSavingState(button);\r\n  editAvatar(avatarUrl)\r\n   .then(result => {\r\n       closeModal(modalAvatar);  \r\n   })\r\n   .catch(err => console.log(err))\r\n   .finally(() => {\r\n     setInitialSaveState(button);\r\n   });  \r\n};\r\n\r\n\r\n// @todo: Слушателель закрытия модальных окон\r\nmodals.forEach((modal) => {\r\n  modal.addEventListener('click', (event) => {\r\n    if(event.target.classList.contains('popup__close')|| event.target.classList.contains('popup')) { // так мы проверим, что юзер кликнул на кнопку или оверлей\r\n      closeModal(modal); // и если это так, закрываем окно, на которое вешаем слушатель (он же на нем сработал)\r\n    }\r\n  })\r\n})\r\n\r\n\r\nPromise.all([getNameProfile(),getInitialCards()])\r\n .then(([resultUser, resultCards]) => {\r\n    // обрабатываем результат\r\n    const myId = resultUser._id;\r\n    profileTitle.textContent=resultUser.name;\r\n    profileDescription.textContent=resultUser.about;\r\n    profileImage.style.backgroundImage = `url(${resultUser.avatar})`;\r\n\r\n\r\n    resultCards.forEach(element => {\r\n     const cardElement = createCard(\r\n      myId,\r\n      element,\r\n      {\r\n        likeCard,\r\n        openModalDelete,\r\n        openModalImage\r\n      }\r\n    );\r\n    cardsList.append(cardElement); \r\n    });\r\n\r\n\r\n    // @todo: Прикрепляем обработчик к форме: “submit” - «отправка»\r\n    formEditProfile.addEventListener('submit', handleFormProfileSubmit);\r\n    formNewCard.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n      handleFormCardSubmit(myId);\r\n    });\r\n  })\r\n  .catch(err => console.log(err));"],"names":["cardTemplate","document","querySelector","createCard","myId","cardData","_ref","arguments","length","undefined","likeCard","openModalDelete","openModalImage","cardElement","content","cloneNode","cardItem","cardId","_id","cardTitle","cardImage","deleteButton","likeButton","arrLikes","likes","textContent","name","src","link","alt","owner","classList","remove","some","like","add","addEventListener","openModal","modal","keyHandlerEscape","closeModal","removeEventListener","evt","key","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","checkInputValidity","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","showInputError","validationMessage","enableValidation","Array","from","querySelectorAll","formSelector","forEach","preventDefault","inputList","inputSelector","buttonElement","submitButtonSelector","toggleButtonState","inactiveButtonClass","setEventListeners","hasInvalidInput","clearValidation","config","baseUrl","headers","authorization","checkResponse","getRes","ok","json","Promise","reject","status","cardsList","buttonEditProfile","buttonAddCard","modals","modalEditProfile","modalAddCard","modalDelete","modalAvatar","formEditProfile","nameInputProfile","jobInputProfile","profileTitle","profileDescription","profileImage","profileEditButton","formNewCard","nameInputCard","urlInputCard","formDelete","formAvatar","avatarInputProfile","handleFormProfileSubmit","button","value","job","setSavingState","fetch","method","body","JSON","stringify","about","patchNameProfile","then","result","catch","err","console","log","finally","setInitialSaveState","refreshLikes","likeCountElement","responce","contains","res","deleteLikeCard","toggle","addLikeCard","cardImg","modalTypeImage","dataImage","titleImage","deleteCard","handleDeleteCardSubmit","avatarUrl","style","backgroundImage","avatar","editAvatar","handleAvatarSubmit","event","target","all","_ref2","resultUser","resultCards","element","append","cardName","cardLink","prepend","handleFormCardSubmit"],"sourceRoot":""}